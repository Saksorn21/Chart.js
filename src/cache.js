import { LRUCache } from 'lru-cache';
import yahooApi from './fetch.js'; // ‡πÉ‡∏ä‡πâ import ‡πÅ‡∏ó‡∏ô require

// 1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏Ñ‡∏ä
const cache = new LRUCache({
  max: 100,
  ttl: 1000 * 60 * 10  // 10 ‡∏ô‡∏≤‡∏ó‡∏µ
});

// 2. ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏Ñ‡∏ä‡∏´‡∏£‡∏∑‡∏≠ API
export default async function getStockData(symbol, range = '1d', interval = '2m') {
  const key = `${symbol}-${range}-${interval}`;

  if (cache.has(key)) {
    console.log(`‚úÖ [‡πÅ‡∏Ñ‡∏ä] ${key}`);
    return cache.get(key);
  }

  console.log(`üåê [API] ‡∏î‡∏∂‡∏á‡πÉ‡∏´‡∏°‡πà: ${key}`);
  const data = await yahooApi(symbol, range);

  const slimData = {
    symbol,
    shortName: data.chart.result[0].meta.shortName,
    range: range,
    dataGranularity: interval,
    timestamp: data.chart.result[0].timestamp,
    regularMarketTime: data.chart.result[0].meta.regularMarketTime,
    marketStartTime: data.chart.result[0].meta.currentTradingPeriod.regular.start,
    marketCloseTime: data.chart.result[0].meta.currentTradingPeriod.regular.end,
    volume: data.chart.result[0].indicators.quote[0].volume,
    close: data.chart.result[0].indicators.quote[0].close,
    closePrice: data.chart.result[0].indicators.quote[0].close[data.chart.result[0].indicators.quote[0].close.length - 1],
    
  };

  cache.set(key, slimData);
  return slimData;
}
